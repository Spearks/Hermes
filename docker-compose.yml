version: '3.3'

services:
  prometheus:
    image: docker.io/prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./node/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./node/targets:/etc/prometheus/targets/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    network_mode: "host"
    hostname: prometheus

  grafana:
    image: docker.io/grafana/grafana-enterprise:9.5.1
    volumes: 
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000

  nginx:
    image: docker.io/bitnami/nginx:1.23-debian-11
    hostname: nginx
    ports:
      - 8001:7000
    volumes:
      - ./node/hermes.conf:/opt/bitnami/nginx/conf/server_blocks/hermes.conf

  django:
    build:
      context: .
      dockerfile: django.dockerfile
    hostname: django
    ports: 
      - 8000:8000
    volumes:
      - django_media:/app/media
      - ./:/app/
    environment: 
      - RUNNER=django
    depends_on:
      - prometheus
      - postgres
      - rabbitmq

  celery:
    build:
      context: .
      dockerfile: node.dockerfile
    volumes:
      - django_media:/app/media
      - ./:/app/
    environment: 
      - RUNNER=celery
    depends_on:
      - prometheus
      - postgres
      - rabbitmq    
    extra_hosts:
    - "prometheus:127.0.0.1"
    - "rabbitmq:127.0.0.1"
    - "postgres:127.0.0.1"
    network_mode: "host"

  postgres:
    image: docker.io/postgres:13
    environment:
      - POSTGRES_USER=hermes
      - POSTGRES_PASSWORD=hermes
      - POSTGRES_DB=hermes
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

    hostname: postgres 

  rabbitmq:
    image: docker.io/rabbitmq:3.12.0-rc.2-alpine
    ports: 
      - 5672:5672
    hostname: rabbitmq 

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:
  django_media:
